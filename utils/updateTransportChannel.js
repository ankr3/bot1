// utils/updateTransportChannel.js
const { EmbedBuilder, ActionRowBuilder, ButtonBuilder, ButtonStyle } = require('discord.js');
const db = require('../database.js');
const config = require('../config.json');

module.exports = async function updateTransportEmbed(client) {
    const transportChannel = await client.channels.fetch(config.channels.transport);
    if (!transportChannel) {
        console.error('–ö–∞–Ω–∞–ª —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω.');
        return;
    }

    db.all('SELECT * FROM transport', [], (err, rows) => {
        if (err) {
            console.error(err);
            return;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞
        if (rows.length === 0) {
            const embed = new EmbedBuilder()
                .setColor(0x0099ff)
                .setTitle('–£—á–µ—Ç –∞–≤—Ç–æ')
                .setDescription('–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –Ω–µ—Ç—É.')
                .setTimestamp();

            const row = new ActionRowBuilder()
                .addComponents(
                    new ButtonBuilder()
                        .setCustomId('list_transport_button')
                        .setLabel('üìã –°–ø–∏—Å–æ–∫ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π')
                        .setStyle(ButtonStyle.Success)
                        .setDisabled(true),
                    new ButtonBuilder()
                        .setCustomId('free_transport_button')
                        .setLabel('üõë –û—Å–≤–æ–±–æ–¥–∏—Ç—å —Ç–µ–∫—É—â–∏–π')
                        .setStyle(ButtonStyle.Danger)
                        .setDisabled(true)
                );

            transportChannel.messages.fetch().then(messages => {
                const transportMessage = messages.find(msg => msg.author.id === client.user.id && msg.embeds.length > 0 && msg.embeds[0].title === '–£—á–µ—Ç –∞–≤—Ç–æ');
                if (transportMessage) {
                    transportMessage.edit({ embeds: [embed], components: [row] });
                } else {
                    transportChannel.send({ embeds: [embed], components: [row] });
                }
            }).catch(err => {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞:', err);
            });

            return; // –ó–∞–≤–µ—Ä—à–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, –µ—Å–ª–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –Ω–µ—Ç
        }

        // –°–æ–∑–¥–∞–µ–º embed —Å id –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ–º –º–∞—à–∏–Ω—ã, –∞ —Ç–∞–∫–∂–µ —Å—Ç–∞—Ç—É—Å–æ–º
        const embed = new EmbedBuilder()
            .setColor(0x0099ff)
            .setTitle('–£—á–µ—Ç –∞–≤—Ç–æ')
            .setTimestamp()
            .addFields(rows.map(transport => {
                // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤ 24-—á–∞—Å–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
                const dateOptions = {
                    year: 'numeric',
                    month: '2-digit',
                    day: '2-digit',
                    hour: '2-digit',
                    minute: '2-digit',
                    second: '2-digit',
                    hour12: false // –û—Ç–∫–ª—é—á–µ–Ω–∏–µ 12-—á–∞—Å–æ–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞
                };
                const formattedDate = new Date(transport.updatedAt).toLocaleString('ru-RU', dateOptions);

                return {
                    name: `${transport.id}. ${transport.name}`, // id –º–∞—à–∏–Ω—ã –∏ –µ—ë –Ω–∞–∑–≤–∞–Ω–∏–µ
                    value: transport.status === '–°–≤–æ–±–æ–¥–Ω–∞' ? '‚úÖ –°–≤–æ–±–æ–¥–Ω–æ' : `‚ùå –ó–∞–Ω—è—Ç–æ ${formattedDate}\n–ö–µ–º –∑–∞–Ω—è—Ç–æ: <@${transport.user}>`
                };
            }));

        const listButton = new ButtonBuilder()
            .setCustomId('list_transport_button')
            .setLabel('üìã –°–ø–∏—Å–æ–∫ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π')
            .setStyle(ButtonStyle.Primary);

        const freeButton = new ButtonBuilder()
            .setCustomId('free_transport_button')
            .setLabel('üõë –û—Å–≤–æ–±–æ–¥–∏—Ç—å —Ç–µ–∫—É—â–∏–π')
            .setStyle(ButtonStyle.Danger);

        const row = new ActionRowBuilder().addComponents(listButton, freeButton);

        transportChannel.messages.fetch().then(messages => {
            const transportMessage = messages.find(msg => msg.author.id === client.user.id && msg.embeds.length > 0 && msg.embeds[0].title === '–£—á–µ—Ç –∞–≤—Ç–æ');
            if (transportMessage) {
                transportMessage.edit({ embeds: [embed], components: [row] });
            } else {
                transportChannel.send({ embeds: [embed], components: [row] });
            }
        }).catch(err => {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞:', err);
        });
    });
};